name: Build and Sign macOS App

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - '!.github/workflows/build.yml'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install the Apple certificate
      env:
        CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create a temporary file for the certificate
        CERTIFICATE_PATH=$RUNNER_TEMP/developer_id_cert.p12
        
        # Decode the base64 certificate into the temporary file
        echo -n "$CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        
        # Create a keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Import the certificate to the keychain
        security import $CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # Verify the certificate was imported correctly
        security find-identity -v -p codesigning $KEYCHAIN_PATH
        
    - name: Install provisioning profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        # Create the directory for provisioning profiles if it doesn't exist
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        
        # Decode the provisioning profile and place it in the appropriate directory
        PROFILE_PATH=~/Library/MobileDevice/Provisioning\ Profiles/Review_Developer_ID.provisionprofile
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output "$PROFILE_PATH"
        
        # Display that the profile was installed successfully
        echo "Provisioning profile installed at: $PROFILE_PATH"
        
    - name: Build and sign the app
      env:
        APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      run: |
        # Make the build script executable
        chmod +x build_for_distribution.sh
        
        # Run the build script
        ./build_for_distribution.sh
        
    - name: Upload app
      uses: actions/upload-artifact@v4
      with:
        name: Review.app
        path: build/Export/Review.app
        
    - name: Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: Review.dmg
        path: build/Review.dmg 